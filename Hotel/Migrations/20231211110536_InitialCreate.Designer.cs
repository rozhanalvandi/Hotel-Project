// <auto-generated />
using System;
using Hotel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20231211110536_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("Hotel.Models.Entities.Product.AdvantageRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("advantageRooms");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Product.AdvantageToRoom", b =>
                {
                    b.Property<int>("AdvantageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HotelRoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AdvantageId", "RoomId");

                    b.HasIndex("HotelRoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("AdvantageToRoom");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Product.HotelAdderss", b =>
                {
                    b.Property<int>("HotelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("TEXT");

                    b.HasKey("HotelId");

                    b.ToTable("hotelAddresses");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Product.HotelGallery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HotelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("hotelGalleries");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Product.HotelRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BedCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("HotelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("hotelRooms");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Product.HotelRules", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("HotelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("hotelRules");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Product.Hotell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("EnteryTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExitTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("HotellId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StageCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HotellId");

                    b.ToTable("hotels");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Product.Reserve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Count")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("HotelRoomId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReserve")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReserveDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HotelRoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("reserveDates");
                });

            modelBuilder.Entity("Hotel.Models.Entities.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Web.FirstBaner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BanerButton")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BanerTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("firstBaners");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Product.AdvantageToRoom", b =>
                {
                    b.HasOne("Hotel.Models.Entities.Product.AdvantageRoom", "advantageRoom")
                        .WithMany("advantageToRooms")
                        .HasForeignKey("AdvantageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.Entities.Product.HotelRoom", null)
                        .WithMany("advantageToRooms")
                        .HasForeignKey("HotelRoomId");

                    b.HasOne("Hotel.Models.Entities.Product.Hotell", "hotelRoom")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("advantageRoom");

                    b.Navigation("hotelRoom");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Product.HotelAdderss", b =>
                {
                    b.HasOne("Hotel.Models.Entities.Product.Hotell", "hotel")
                        .WithOne("hotelAdderss")
                        .HasForeignKey("Hotel.Models.Entities.Product.HotelAdderss", "HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hotel");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Product.HotelGallery", b =>
                {
                    b.HasOne("Hotel.Models.Entities.Product.Hotell", "hotel")
                        .WithMany("hotelGalleries")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hotel");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Product.HotelRoom", b =>
                {
                    b.HasOne("Hotel.Models.Entities.Product.Hotell", "hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hotel");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Product.HotelRules", b =>
                {
                    b.HasOne("Hotel.Models.Entities.Product.Hotell", "hotel")
                        .WithMany("hotelRules")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hotel");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Product.Hotell", b =>
                {
                    b.HasOne("Hotel.Models.Entities.Product.Hotell", null)
                        .WithMany("hotelRooms")
                        .HasForeignKey("HotellId");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Product.Reserve", b =>
                {
                    b.HasOne("Hotel.Models.Entities.Product.HotelRoom", null)
                        .WithMany("reserves")
                        .HasForeignKey("HotelRoomId");

                    b.HasOne("Hotel.Models.Entities.Product.Hotell", "hotelroom")
                        .WithMany("reserves")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hotelroom");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Product.AdvantageRoom", b =>
                {
                    b.Navigation("advantageToRooms");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Product.HotelRoom", b =>
                {
                    b.Navigation("advantageToRooms");

                    b.Navigation("reserves");
                });

            modelBuilder.Entity("Hotel.Models.Entities.Product.Hotell", b =>
                {
                    b.Navigation("hotelAdderss")
                        .IsRequired();

                    b.Navigation("hotelGalleries");

                    b.Navigation("hotelRooms");

                    b.Navigation("hotelRules");

                    b.Navigation("reserves");
                });
#pragma warning restore 612, 618
        }
    }
}
